#!/usr/bin/env python

import icedbProgSetup  # noqa: F401
import sys
import os
import argparse
from gencode_icedb.rnaSeqData import RnaSeqDataLoader
from gencode_icedb import dataOps, config
from peewee import SqliteDatabase

os.environ['PATH'] = icedbProgSetup.myBinDir + ":" + os.environ['PATH']

verbose = False


def parseArgs():
    desc = """Register an RNA-Seq data (reads) in an IceDb dataset database.
,"""
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('--verbose', action="store_true", default=False,
                        help="write verbose output")
    parser.add_argument('--rootDir', default=".",
                        help="""data root directory""")
    parser.add_argument('--skipExisting', action="store_true", default=False,
                        help="skip adding records with same name and keep")
    parser.add_argument('--readsFileUrl',
                        help="""URL where files was obtained; for recording only""")
    parser.add_argument('--description',
                        help="""description of RNA-Seq data""")
    parser.add_argument('--tissue',
                        help="""description of tissue(s) that were used""")
    parser.add_argument('organism',
                        help="""common name of organism""")
    parser.add_argument('rnaSeqSet',
                        help="""name of RNA-Seq data set""")
    parser.add_argument('rnaSeqRun',
                        help="""unique name of read run set""")
    parser.add_argument('readsFile',
                        help="""base name of input reads file SAM, BAM or
                        Fastq format, which maybe compressed.  This should be
                        in the directory defined by PathConfig""")
    parser.add_argument('--readsFile2Url',
                        help="""URL where files was obtained; for recording only""")
    parser.add_argument('--readsFile2',
                        help="""base name of second reads file, used when read pairs are
                        split into two fastq files.  Both reads must be fastq
                        files if used.""")
    opts = parser.parse_args()
    if opts.readsFile2 is not None:
        if not (dataOps.isFastq(opts.readsFile) and dataOps.isFastq(opts.readsFile2)):
            parser.error("both reads files must be fastq if --readsFile2 is specified")
    if (opts.readsFile2Url is not None) and (opts.readsFile2 is None):
        parser.error("--readsFile2Url requires --readsFile2")
    global verbose
    verbose = opts.verbose
    return opts


def verbPr(msg, opts):
    if verbose:
        sys.stderr.write(msg + ": " + opts.rnaSeqSet + "/" + opts.rnaSeqRun + "\n")


def rnaSeqRunRegister(opts):
    pathConfig = config.PathConfig(opts.rootDir, opts.organism)
    database = SqliteDatabase(pathConfig.dataDatabase())
    loader = RnaSeqDataLoader(database, pathConfig,
                              opts.rnaSeqSet, opts.organism,
                              opts.skipExisting)
    status = loader.registerRun(opts.rnaSeqRun,
                                opts.description, opts.tissue,
                                opts.readsFileUrl, opts.readsFile,
                                opts.readsFile2Url, opts.readsFile2)
    verbPr(str(status), opts)

opts = parseArgs()
rnaSeqRunRegister(opts)
