#!/usr/bin/env python

from __future__ import print_function
import icedbProgSetup  # noqa: F401
import argparse
import sys
from gencode.data.gencodeGenes import GencodeGenes
from gencode_icedb.rsl.gencodeIntronEvid import GencodeIntronEvidSet
from pycbio.sys import loggingOps


def parseArgs():
    desc = """Compute per-transcript support levels and annotations from RNA-Seq
    evidence."""
    parser = argparse.ArgumentParser(description=desc)
    loggingOps.addCmdOptions(parser)
    parser.add_argument('gencodeGenePred',
                        help="gencode genePred ")
    parser.add_argument('gencodeAttrTsv',
                        help="GENCODE attributes")
    parser.add_argument('spliceJunctionEvidTsv',
                        help="length of reads that will be mapped; used to calculate splice junction overhang")
    opts = parser.parse_args()
    loggingOps.setupFromCmd(opts, sys.argv[0])
    return opts


class GencodeIntronSupport(object):
    def __init__(self, gencodeGenePred, gencodeAttrTsv, spliceJunctionEvidTsv):
        self.intronEvid = GencodeIntronEvidSet(spliceJunctionEvidTsv)
        self.gencode = GencodeGenes.loadFromFiles(gencodeGenePred, gencodeAttrTsv)

    def __calculateIntronSupportLevel(self, evid):
        pass

    def calculateSupportLevel(evid):
        pass

    def scoreTranscriptLocus(transLocus):
        pass


def rnaSeqIntronSupport(opts):
    gis = GencodeIntronSupport(opts.gencodeGenePred, opts.gencodeAttrTsv, opts.spliceJunctionEvidTsv)
    print(gis)  # FIXME: program not done


rnaSeqIntronSupport(parseArgs())
