#!/usr/bin/env python3
import icedbProgSetup  # noqa: F401
import argparse
from pycbio.tsv import TsvReader
from gencode_icedb.tsl.supportDefs import GenbankProblemReason
from gencode_icedb.tsl.genbankProblemCasesSqlite import GenbankProblemCaseSqliteTable
from pycbio.db.sqliteOps import sqliteConnect


def parseArgs():
    desc = """Load problem case tab file generate gbffGetProblemCases by
    into a sqlite3 databases. """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('problemTabFile',
                        help="""tab file with problem accessions and reasons""")
    parser.add_argument('sqliteDb',
                        help="""database to load problems into""")
    return parser.parse_args()


problemCasesTsvTypeMap = {
    "reason": GenbankProblemReason
}


def loadProblemCasesTsv(problemCasesTsv):
    # FIXME: count get apsw to convert reason, so just leave as s tring for now
    # return [GenbankProblemCase(*row) for row in TsvReader(problemCasesTsv, typeMap=problemCasesTsvTypeMap)]
    return [row.getRow() for row in TsvReader(problemCasesTsv, typeMap=problemCasesTsvTypeMap)]


def genbankProblemCasesLoad(opts):
    "main function"
    recs = loadProblemCasesTsv(opts.problemTabFile)
    conn = sqliteConnect(opts.sqliteDb, create=True)
    dbTbl = GenbankProblemCaseSqliteTable(conn, create=True)
    dbTbl.loads(recs)
    conn.close()


genbankProblemCasesLoad(parseArgs())
