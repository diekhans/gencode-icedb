#!/usr/bin/env python3
import icedbProgSetup  # noqa: F401
import argparse
from pycbio.tsv import TsvReader, tsvRowToDict
from gencode_icedb.tsl.tslModels import tslConnect, tslClose, GenbankProblemReason, GenbankProblemCase


def parseArgs():
    desc = """Load problem case tab file generate gbffGetProblemCases by
    into a sqlite3 databases. """
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('problemTabFile',
                        help="""tab file with problem accessions and reasons""")
    parser.add_argument('sqliteDb',
                        help="""database to load problems into""")
    return parser.parse_args()


problemCasesTsvTypeMap = {
    "reason": GenbankProblemReason
}


def loadProblemCasesTsv(problemCasesTsv):
    return [tsvRowToDict(row) for row in TsvReader(problemCasesTsv, typeMap=problemCasesTsvTypeMap)]


def problemCasesDbLoad(conn, recs):
    with conn.atomic():
        GenbankProblemCase.insert_many(recs).execute()


def genbankProblemCasesLoad(opts):
    "main function"
    recs = loadProblemCasesTsv(opts.problemTabFile)
    conn = tslConnect(opts.sqliteDb, create=True)
    GenbankProblemCase.create_table(fail_silently=True)
    problemCasesDbLoad(conn, recs)
    tslClose(conn)


genbankProblemCasesLoad(parseArgs())
