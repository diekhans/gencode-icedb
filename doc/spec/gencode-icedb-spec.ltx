\documentclass[pdftex,11pt]{article}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage[pdftex]{graphicx}
\usepackage{color}


% tight itemized list
\newenvironment{tightitemize}{%
\begin{itemize}
  \setlength{\itemsep}{1pt}%
  \setlength{\parskip}{0pt}%
  \setlength{\parsep}{0pt}%
}{\end{itemize}}

% to-do
\newcommand\todo[1]{{\large\textcolor{red}{TO DO: \em #1}}}%

\title{GENCODE Independently Collected Evidence Database (ICEDB)}
\date{\today}
\author{Mark Diekhans \href{mailto:markd@soe.ucsc.edu}{$<$markd@soe.ucsc.edu$>$}}

\begin{document}
\maketitle

\section{Goals}
The goal of the Transcription Support Level (TSL) mechanism created for
GENCODE was to provide a simple, independent metric to answer the question
{\em how well supported is this annotation as transcribe in human.?}  

A short coming of the TSL approach was the inability to ask more detailed
questions about why something has a given level of support.  The goal of this
project is to address this shortcoming by building a database mapping evidence
to GENCODE annotations.  \todo{more}

\section{Data model}
single vs multi-exon transcripts
special cases
fuzzy ends and NAGNAG

Objects defined by GENCODE annotations:
\begin{tightitemize}
\item exon - includes NAGNAG annotations
\item intron - includes splice sites and NAGNAG annotations
\item transcript - linking introns and exons
\item gene - group transcripts
\item CDS - CDS regions of exons
\end{tightitemize}

Evidence mapped to GENCODE features:
\begin{tightitemize}
\item GenBank mRNA alignments
\item GenBank EST alignments to multi-exon genes
\item GenBank EST densities (wiggles) for single-exon genes
\item RNA-Seq 
\item protein spectra mapped to CDS
\end{tightitemize}



\section{Evidence sources}
\begin{tightitemize}
\item Human mRNAs:
\item Human ESTs:
\item RNA-Seq
\end{tightitemize}

\subsection{RNA-Seq evidence}

RNA-Seq mappings are analyzed to score support for introns (exon-pairs) in
GENCODE annotations.  In order to produce consistent mappings and analysis, 
selected RNA-Seq data is remapped to the genome using the GENCODE set as 
the target set.  The STAR \cite{Dobin25102012} mapper is use, which
has excellent speed and maintaining accuracy.

Due to lack of good support for mapping reads to alt-loci sequence, only the
primary assembly, including unlocalized sequence, is current evaluated.

The remapped alignments are discarded, only the splice junction output is
kept.  The results are filter to drop splice junction support small {\it
  maximum spliced alignment overhang}.


\section{Build process}

\subsection{RNA-Seq data}

\iffalse
      (Homo sapiens[Organism]) AND ("transcriptomic"[Source])
      (Mus musculus[Organism]) AND ("transcriptomic"[Source])

Sample type
"Homo sapiens"[Organism] AND "human 1 0"[filter]
o
obtaining data:
https://bioconductor.org/packages/release/bioc/html/SRAdb.html
  http://gbnci.abcc.ncifcrf.gov/backup/SRAmetadb.sqlite.gz

http://metasra.biostat.wisc.edu/ (uses SRAmetadb) [only human]

Build STAR splice junction support database from STAR resuts
\item Obtain SRA runinfo CVS from the SRA browser.
\item Filter SRA runinfo using \texttt{rslSraRunInfoFilter --full} to obtain
  run information.  You may need to filter using the \texttt{--selectSubsetTsv}
  option for available runs.
\item Create a STAR results directory TSV file.  This list STAR sjout files,
  relative to the TSV file.  It maps them to run accessions and assigns unique
  names.  See \texttt{lib/gencode_icedb/rsl/starResultsDir.py} for definition of
  columns
\item Create a mapping parameters TSV file (see \texttt{starResultsDir.py}), that defines
  mapping parameters for STAR results.
\item Load run info into database using \texttt{rslSraRunInfoDbLoad}.
\item Load run info into database using \texttt{rslMappingMetadataDbLoad}.

\item Split all STAR splice junction files by chromosome, adding mapping
  metadata symbolic ids to each row and converting to zero-based coordinates
  (\textit{*.sjsup} files).  This is done using \texttt{rslMkStarSjOutSplits} 
\item Generate a series of batch to merge split \textit{sjsup} files
  with \textit{rslMkStarSjSupMergeJobs}.
\item Sequentially run parasol batches on cluster using generated script.
\item Compress final file with  \texttt{bgzip} and index with \texttt{tabix}.

\item Summary
  \begin{itemize}
  \item create \texttt{etc/czi.hs.star-results.all.tsv} for all available results 
  \item \texttt{rslSraRunInfoFilter --full --selectSubsetTsv=etc/czi.hs.star-results.all.tsv SraRunInfo.human.transcriptomics.cvs.bz2 etc/czi.hs.run-info.tsv}
  \item \texttt{selectById -tsv 1 etc/czi.hs.run-info.tsv 1 etc/czi.hs.star-results.all.tsv > etc/czi.hs.star-results.tsv}
  \item \texttt{rslSraRunInfoDbLoad sjdb/czi.hs.db etc/czi.hs.run-info.tsv}
  \item \texttt{rslMappingMetadataDbLoad sjdb/czi.hs.db etc/czi.hs.mapping_params.tsv etc/czi.hs.star-results.tsv}
  \item \texttt{rslMkStarSjOutSplits --numprocs=8 etc/czi.hs.star-results.tsv merge.tmp}
  \item \texttt{rslMkStarSjSupMergeJobs merge.tmp}
  \item \texttt{./merge.tmp/run-batches}
  \item \texttt{bgzip -c merge.tmp/004.merged/000.sjsup > sjdb/czi.hs.sjsup.gz}
  \item \texttt{tabix -0 -p bed sjdb/czi.hs.sjsup.gz}
  \item \texttt{chmod a-w sjdb/*}
  \item \texttt{rm -rf merge.tmp}
  \end{itemize}

\item Load putative intron information into database using \texttt{rslStarIntronDbLoad}.
  This can be repeated for new data, only new putative introns definitions are
  added.
\item Load splice junction intron support with \texttt{rslStarSjSupportDbLoad}.

  
Notes
\item By loading introns in a separate step, primary keys are defined in advance,
  and locality of introns is improved.

above is way too slow

  
\fi
\iffalse
how to detect:
  ENST00000359597.4 (TP53)
  ENST00000413465.2 (TP53)
\fi
\bibliographystyle{plain}
\bibliography{spec}

\end{document}
